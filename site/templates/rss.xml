<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
    <title>ntoll.org ~ everything I say is false</title>
    <link>http://ntoll.org/</link>
    <atom:link href="http://ntoll.org/rss.xml" rel="self" type="application/rss+xml" />
    <description>The personal website of Nicholas H.Tollervey</description>
    <image>
        <url>http://ntoll.org/static/images/logo.png</url>
        <link>http://ntoll.org/</link>
        <title>ntoll.org ~ everything I say is false</title>
    </image>
    
    <item>
        <title>PyCon India</title>
        <link>http://ntoll.org/article/india</link>
        <guid>http://ntoll.org/article/india</guid>
        <description>&lt;h1&gt;&lt;a href=&quot;http://ntoll.org/article/india&quot;&gt;PyCon India&lt;/a&gt;&lt;/h1&gt;&lt;p class=&quot;published_on&quot;&gt;Saturday 24th October 2015 (1:00AM)&lt;/p&gt;

&lt;p&gt;It was an enormous honour to be invited as a keynote speaker at
&lt;a href=&quot;https://in.pycon.org/&quot;&gt;PyCon India&lt;/a&gt;. It turned out to be one of
my most enjoyable PyCons.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://python.org/&quot;&gt;Python&lt;/a&gt; programming community is famous
for being a diverse and welcoming place. Apparently someone once said that
they&#x27;d came to Python for the programming language, but stayed because of the
community. That has been my experience too. Visiting PyCon India reinforced
this outlook.&lt;/p&gt;

&lt;p&gt;Python is free software in two ways: anyone is free to make use of it in
any way they see fit and it is given away for free. To paraphrase, it is
both free as in speech and free as in beer. Volunteering time, effort and
expertise is at the core of the Python community and every PyCon is different
since it reflects the volunteer community that organises it.&lt;/p&gt;

&lt;p&gt;At around 1500 attendees PyCon India is the second largest PyCon in the
world. The reason it is so big is because the organisers have managed to
foster and grow a community of amazing volunteers to run the conference. This
was brought home to me during my first evening in India: wanting to make some
friends I turned up at the conference venue to volunteer in some way. I ended
up stuffing 1500 swag bags (full of leaflets from the conference sponsors),
in what can only be described as a nerdy form of &quot;keep-fit&quot;.&lt;/p&gt;

&lt;p&gt;It works like this: volunteers
run around in circles holding open bags while others stand in the middle
throwing &quot;swag&quot; into them. At the end of each lap yet more volunteers are on
hand to stack the bags ready for distribution to the attendees the next day.
This process starts haphazardly, but people change roles and slot
themselves in where there are bottlenecks in order to improve the efficiency
of the &quot;bag stuffing algorithm&quot;. Other techniques to speed things up included
shouting a lot, chanting and laughing at each other. This process is
beautifully illustrated in the following video of a &quot;lap&quot; that I took on my
mobile phone:&lt;/p&gt;

&lt;div class=&quot;video-container&quot;&gt;
&lt;iframe width=&quot;640&quot; height=&quot;360&quot; src=&quot;https://www.youtube-nocookie.com/embed/Ejr6iqqCdhc?rel=0&amp;amp;controls=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;By the end of the evening we were a well oiled machine.&lt;/p&gt;

&lt;p&gt;Friday, the first full conference day, was interesting - I was still used
to UK time so when my alarm went off at 6am (or around 1:30 am UK time) I
decided to sleep in for &quot;just another 10 minutes&quot;. Four hours later I was
woken by a phone call from reception. An Indian buddy had turned up at my
hotel to look for me and give me a lift.&lt;/p&gt;

&lt;p&gt;He&#x27;d come on a motorbike.&lt;/p&gt;

&lt;p&gt;I&#x27;d never been on a motorbike.&lt;/p&gt;

&lt;p&gt;So, my first time on a motorbike was sitting on the back, hanging onto this
dude&#x27;s back pack, no helmet, dust in my eyes, zipping through Bangalore&#x27;s
morning rush-hour.&lt;/p&gt;

&lt;p&gt;&quot;Is it safe?&quot; I asked.&lt;/p&gt;

&lt;p&gt;&quot;Of course it is...&quot;, he replied. &quot;The traffic is so bad we never go faster than 15 mph anyway!&quot;&lt;/p&gt;

&lt;p&gt;The trick appears to be not to pay attention to all the car horns, shouting
and never to look over your shoulder at what could squish you.&lt;/p&gt;

&lt;p&gt;I also observed that traffic lights in Bangalore are only for decorative
purposes. I particularly enjoyed getting stuck at a junction and giving an
ancient lady in a colourful sari sat on the back of an adjacent moped a
big grin and having it returned (but without teeth).&lt;/p&gt;

&lt;p&gt;The following video (taken from the relative safety of a taxi) doesn&#x27;t
even begin to convey the chaos of the traffic in Bangalore. Can you spot the
stray cow?&lt;/p&gt;

&lt;div class=&quot;video-container&quot;&gt;
&lt;iframe width=&quot;640&quot; height=&quot;360&quot; src=&quot;https://www.youtube-nocookie.com/embed/6KOLKBoPF9A?rel=0&amp;amp;controls=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Throughout the course of the conference I found everyone, without exception,
to be very friendly and I was made to feel very welcome. Thank you to my new
friends in India for your wonderful warm hospitality. I hope that if you ever
make it to the UK we&#x27;ll be able to welcome you as well as you did me.&lt;/p&gt;

&lt;p&gt;Sunday was the day of my keynote. I was addressing all 1500 delegates in
the main hall and I&#x27;d chosen to focus on education as the topic of my
presentation. I was actually really looking forward to giving the talk and
had a lot of fun whilst giving it. The live demo went well, people laughed at
my jokes, they had lots of interesting questions and it took me about an hour
and a half to field all the comments I received in the corridor afterwards.
In fact, one of the organisers told me that my keynote was a top trending item
on Twitter in India. Wow!&lt;/p&gt;

&lt;p&gt;You can see the whole thing in the video below.&lt;/p&gt;

&lt;div class=&quot;video-container&quot;&gt;
&lt;iframe width=&quot;640&quot; height=&quot;360&quot; src=&quot;https://www.youtube-nocookie.com/embed/Q3kXXtlviiM?rel=0&amp;amp;controls=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;As always, I love to get feedback (both good and bad). Please feel free to
&lt;a href=&quot;/contact&quot;&gt;drop me a line&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Special mention should be made of the two main organisers, Vijay Kumar and
Kracekumar Ramaraju, who put on an amazing event. I&#x27;d also like to publicly
thank my friend Kushal Das and his family and colleagues for being my guides
around Bangalore.&lt;/p&gt;

&lt;p&gt;Will I go back to India? Absolutely! It&#x27;s an amazing place.&lt;/p&gt;

&lt;p&gt;It was a privilege.&lt;/p&gt;
</description>
        <pubDate>Sat, 24 Oct 2015 01:00:00 GMT</pubDate>
    </item>
    
    <item>
        <title>The Story of MicroPython on the BBC micro:bit</title>
        <link>http://ntoll.org/article/story-micropython-on-microbit</link>
        <guid>http://ntoll.org/article/story-micropython-on-microbit</guid>
        <description>&lt;h1&gt;&lt;a href=&quot;http://ntoll.org/article/story-micropython-on-microbit&quot;&gt;The Story of MicroPython on the BBC micro:bit&lt;/a&gt;&lt;/h1&gt;&lt;p class=&quot;published_on&quot;&gt;Tuesday 20th October 2015 (8:00AM)&lt;/p&gt;

&lt;p&gt;I am a child of the 1980s.&lt;/p&gt;

&lt;p&gt;One of the formative experiences of my childhood was the arrival of our
first computer. My father was a headteacher - one half-term holiday he brought
home his school&#x27;s computer to learn how to use it. Yet it was my brother and I
who spent most time on it. This was my first program, written in a language
called &lt;a href=&quot;https://en.wikipedia.org/wiki/BBC_BASIC&quot;&gt;BASIC&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;basic&quot;&gt;10 CLS
20 PRINT &quot;YOU&#x27;RE AN IDIOT&quot;
30 GOTO 20&lt;/code&gt;&lt;/pre&gt;&lt;br/&gt;

&lt;p&gt;I remember the infectious enthusiasm of a number of my teachers: my
design and technology teacher, a gentleman called Eric Rose, showing me how to
program a robot arm he&#x27;d made and the school librarian, Philip Wilson,
encouraging me to explore and experiment with
&lt;a href=&quot;https://en.wikipedia.org/wiki/Bulletin_board_system&quot;&gt;bulletin-board
systems&lt;/a&gt; and a long-forgotten service called
&lt;a href=&quot;https://en.wikipedia.org/wiki/Prestel&quot;&gt;PRESTEL&lt;/a&gt; (forerunners of
today&#x27;s consumer internet).&lt;/p&gt;

&lt;p&gt;I wouldn&#x27;t be a programmer were it not for such positive formative
experiences.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/images/bbcmicro.jpeg&quot; alt=&quot;A BBC Micro&quot;/&gt;&lt;/p&gt;

&lt;p&gt;The computer I used was, of course, the
&lt;a href=&quot;https://en.wikipedia.org/wiki/BBC_Micro&quot;&gt;BBC Micro&lt;/a&gt;:
the result of an extraordinary initiative called the
&lt;a href=&quot;http://www.naec.org.uk/organisations/bbc-computer-literacy-project/towards-computer-literacy-the-bbc-computer-literacy-project-1979-1983&quot;&gt;BBC Computer Literacy Project&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;David Allen, the project&#x27;s producer,
&lt;a href=&quot;http://www.nesta.org.uk/publications/legacy-bbc-micro&quot;&gt;explained&lt;/a&gt;
that, &quot;[t]he aim was to democratise computing. We didn&#x27;t want people to be
controlled by it, but to control it.&quot;&lt;/p&gt;

&lt;p&gt;Fast forward to today.&lt;/p&gt;

&lt;p&gt;Thanks to the efforts of teachers in organisations such as
&lt;a href=&quot;http://www.computingatschool.org.uk/&quot;&gt;CAS&lt;/a&gt; and extraordinary
world-changing projects like the
&lt;a href=&quot;https://www.raspberrypi.org/&quot;&gt;RaspberryPi&lt;/a&gt;, computing education is
undergoing a renaissance in the UK and the BBC are stepping up to help once
more. The Python programming language is part of this effort and
&lt;strong&gt;you&lt;/strong&gt; can get involved.&lt;/p&gt;

&lt;p&gt;What follows is the story so far...&lt;/p&gt;

&lt;p&gt;In December 2014 the BBC announced their intention to create a mysterious
computing-in-education project with &quot;partners&quot;. I had recently organised
&lt;a href=&quot;http://www.pyconuk.org/education/&quot;&gt;PyCon UK&#x27;s education track&lt;/a&gt;,
people knew I was a
&lt;a href=&quot;https://www.python.org/psf/&quot;&gt;Python Software Foundation&lt;/a&gt; (PSF)
fellow and kept asking me if the PSF was involved. I decided to
investigate and, with the blessing of the PSF board, applied for the PSF to
join said partnership.&lt;/p&gt;

&lt;p&gt;The BBC explained a staggering &quot;moon-shot&quot; project: to create a small,
computing device to be delivered to &lt;strong&gt;ALL&lt;/strong&gt; year 7 children
(11-12 years old) in the UK. The newly christened
&lt;a href=&quot;http://www.bbc.co.uk/mediacentre/mediapacks/microbit&quot;&gt;BBC micro:bit&lt;/a&gt;
would facilitate the first step towards inspiring digital creativity in a new
generation of school children. I could identify with that!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/images/microbit.jpg&quot; alt=&quot;A BBC micro:bit&quot;/&gt;&lt;/p&gt;

&lt;p&gt;At the beginning of 2015 a partnership was formed to deliver such a device
and the PSF were on board to deliver educational support, resources and Python
expertise. The BBC told us they already had a partner to create a Python
&quot;solution&quot; for the device.&lt;/p&gt;

&lt;p&gt;Over the spring I volunteered my time to attended meetings at the BBC and
got to know several of our fellow partners:
&lt;a href=&quot;http://www.arm.com/&quot;&gt;ARM&lt;/a&gt; and
&lt;a href=&quot;https://www.techwillsaveus.com/&quot;&gt;Tech Will Save Us&lt;/a&gt; were designing
the hardware, Microsoft was to supply a child friendly
&lt;a href=&quot;https://www.touchdevelop.com/&quot;&gt;development environment&lt;/a&gt; and many
more were tackling other aspects of the project. I spent my time working out
how to engage with our extensive network of Python-using teachers who could
experiment with the device, create resources and train colleagues. I also
wondered how to engage the wider Python community who, I was certain,
would be very excited by the project.&lt;/p&gt;

&lt;p&gt;However, I encountered two problems:&lt;/p&gt;

&lt;p&gt;First, the project is covered by an
&lt;a href=&quot;https://en.wikipedia.org/wiki/Non-disclosure_agreement&quot;&gt;NDA&lt;/a&gt;.
The partnership agreement states that when the device is delivered all the
resources needed to recreate the project are to be released under an open
license ~ the laudable intention being an unencumbered legacy so others can
build upon and adapt the work of the partnership. The NDA exists for the same
reason there&#x27;s a pre-broadcast NDA in place for the makers of
&lt;a href=&quot;http://www.bbc.co.uk/programmes/b006q2x0&quot;&gt;Doctor Who&lt;/a&gt;:
it avoids spoilers that would lessen the impact of the launch. Unfortunately,
saying &quot;NDA&quot; to anyone from a free software background (such as Python) is a
sure-fire way to turn them off (at best) or become hostile (at worst). This
wouldn&#x27;t be an easy sell!&lt;/p&gt;

&lt;p&gt;Secondly, at the end of April I was asked to a meeting at the BBC where
I was told the partner tasked to supply Python had dropped out. &quot;We must
have Python on the micro:bit&quot; said the BBC. &quot;I think you want the moon on a
stick&quot; I thought. Nevertheless, I agreed to look at Microsoft&#x27;s TouchDevelop
platform with a view to creating a version of Python to sit on top of the
development environment and cloud based compilation service. I would need help,
so asked those UK based Pythonistas I knew who had the right skill-set and
interest in education to sign the NDA and help me evaluate what to do next.&lt;/p&gt;

&lt;p&gt;Microsoft&#x27;s
&lt;a href=&quot;https://github.com/Microsoft/TouchDevelop&quot;&gt;TouchDevelop&lt;/a&gt; is a
fascinating open source project: it&#x27;s a browser based visual IDE for kids that
generates a
&lt;a href=&quot;http://json.org/&quot;&gt;JSON&lt;/a&gt; based
&lt;a href=&quot;https://en.wikipedia.org/wiki/Abstract_syntax_tree&quot;&gt;AST&lt;/a&gt; that&#x27;s
turned into &lt;a href=&quot;https://en.wikipedia.org/wiki/C%2B%2B&quot;&gt;C++&lt;/a&gt; and sent
to ARM&#x27;s &lt;a href=&quot;https://www.mbed.com/en/&quot;&gt;mBed&lt;/a&gt; cloud compilation service.
Ultimately, a &lt;a href=&quot;https://en.wikipedia.org/wiki/Intel_HEX&quot;&gt;hex&lt;/a&gt; file
is delivered to the user&#x27;s browser and downloaded onto their local file-system.
Plugging in the micro:bit makes it appear as USB storage and you flash it
by dragging the hex file onto the device.&lt;/p&gt;

&lt;p&gt;Python is, of course, a dynamic interpreted language rather than a static
compiled language such as the one used by TouchDevelop. Furthermore, a version
of Python that compiled to the TouchDevelop AST would be a completely new
language - a Pythonic
&lt;a href=&quot;https://en.wikipedia.org/wiki/Shim_(computing)&quot;&gt;shim&lt;/a&gt; to make
TouchDevelop feel like Python. Finally, TouchDevelop itself is written in
&lt;a href=&quot;https://en.wikipedia.org/wiki/TypeScript&quot;&gt;TypeScript&lt;/a&gt;, an
interesting Microsoft-developed language that compiles to JavaScript. None of
us evaluating TouchDevelop knew TypeScript and the thought of creating a
new compiler for a sort-of-Python, frankly, gave us the collywobbles.&lt;/p&gt;

&lt;p&gt;Ultimately, designing and creating something Python-ish to work on
TouchDevelop appeared to be impossibly difficult (or difficultly impossible,
depending on how you looked at it) for a handful of volunteers working in
their spare time in an unfamiliar language.&lt;/p&gt;

&lt;p&gt;It was at this time that something amazing happened.&lt;/p&gt;

&lt;p&gt;I was at a partner&#x27;s meeting at the BBC and, quite by accident, struck up a
tea-break conversation with &quot;Jonny from ARM, pleased to meet you&quot;. It turned
out that &lt;a href=&quot;https://github.com/jaustin&quot;&gt;Jonny&lt;/a&gt; is a fellow geek, but
one that inhabits a different layer of the computing stack (I generally work
in high level languages like Python or JavaScript, Jonny feels more at home
close to the bare metal hacking hardware).&lt;/p&gt;

&lt;p&gt;After we&#x27;d figured out the above, Jonny asked, &quot;have you ever heard of &lt;a href=&quot;http://micropython.org&quot;&gt;MicroPython&lt;/a&gt;?&quot; (MicroPython is a full
re-implementation of Python 3 for microcontrollers used in small devices such
as the micro:bit).&lt;/p&gt;

&lt;p&gt;&quot;Why yes&quot;, I replied, &quot;I&#x27;ve spoken to Damien several times over the phone
since he was invited to speak at last year&#x27;s PyCon UK&quot;
(&lt;a href=&quot;https://github.com/dpgeorge&quot;&gt;Damien&lt;/a&gt; is the Cambridge based creator of MicroPython).&lt;/p&gt;

&lt;p&gt;&quot;Cool, I know Damien too, he&#x27;s my next-door-neighbour&quot;, explained Jonny,
after which he casually told me, &quot;you know, it should be possible to get
MicroPython to run on the micro:bit&quot;.&lt;/p&gt;

&lt;p&gt;&quot;Really..? The BBC had told me they&#x27;d looked into MicroPython but the
device had the wrong chipset...&quot;&lt;/p&gt;

&lt;p&gt;&quot;Oh, that was correct for the prototype. But we&#x27;ve changed the chipset.
I&#x27;m pretty certain it&#x27;ll work now.&quot;&lt;/p&gt;

&lt;p&gt;Soon after I went to see Damien in Cambridge. I explained the project and
he agreed he&#x27;d be willing to volunteer some time to explore porting MicroPython
onto the device (Damien, like me, has a full time job). I organised for him to
sign the NDA and Jonny supplied Damien with the appropriate things needed
to compile MicroPython for the target chipset.&lt;/p&gt;

&lt;p&gt;About a week later (at the very end of May) Damien emailed myself, Jonny
and a few interested people at the BBC:&lt;/p&gt;

&lt;blockquote&gt;Thanks Jonny for the nRF mkit dev board, it has proved very useful!
&lt;br&gt;
&lt;br&gt;
I signed up to mbed, exported the blinky example for the mkit and got
it compiling locally using a local toolchain.  And then using this I
managed to get MicroPython compiling and running on the mkit!  There
is a surprisingly large amount of room: I could enable floating point
support, aribitrary precision integers, most of the Python features
and a few builtin modules.  The REPL works over the USB-UART with
history and tab completion.  It even has a working ctrl-C (meaning you
can break out of an infinite loop).  I implemented a basic &quot;pyb&quot;
module with LED and Switch classes, and a delay function.  So you can
do something like:&lt;br&gt;&lt;br&gt;
led = pyb.LED(1)&lt;br&gt;
while True:&lt;br&gt;
&amp;nbsp;&amp;nbsp;led.toggle()&lt;br&gt;
&amp;nbsp;&amp;nbsp;pyb.delay(100)&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;I&#x27;m not ashamed to say that I danced around the room fist-pumping the air
shouting &quot;woo hoo&quot; when I read Damien&#x27;s email. It confirmed there was a real
possibility of getting &lt;strong&gt;proper Python to run directly on the
device itself&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A week later I was in London for another partner&#x27;s meeting where I was to
get my hands on one of the very first batch of final-design devices.
It was heartbreaking to be given such a cool device only to have to pass it to
Jonny with the sad plea, &quot;can you post this through Damien&#x27;s letter box
please?&quot;.&lt;/p&gt;

&lt;p&gt;Over the next days Damien, Jonny and I kept in touch as Damien worked
around some teething problems. Then, on the 17th June, Damien emailed
again:&lt;/p&gt;

&lt;blockquote&gt;Using your new USB serial firmware and demo program I have now got
MicroPython running on the micro:bit!&lt;br/&gt;&lt;/blockquote&gt;

&lt;p&gt;We finally had confirmation that MicroPython was going to work on the
device! Much dancing, fist-pumping and shouts of &quot;woo hoo&quot; took place as I
emailed the BBC with the good news.&lt;/p&gt;

&lt;p&gt;They asked how we could integrate our work into TouchDevelop so I embarked
upon writing a browser-based code editor (starting from the excellent
&lt;a href=&quot;https://ace.c9.io/&quot;&gt;ace&lt;/a&gt; editor). This is mostly done apart from
some design tweaks. It&#x27;s currently embedded in a test instance of
TouchDevelop and works really well!&lt;/p&gt;

&lt;p&gt;Interestingly, because this is Python we don&#x27;t have to use the cloud
compilation toolchain. Since hex files are a simple format we worked out a way
of encoding Python scripts written in the editor in such a way that
they can be inserted into the appropriate place in MicroPython&#x27;s hex file.
When the device starts up it discovers the embedded Python and the script
is automatically run. Since the size of the MicroPython hex file is a lot less
than say, the total size of the BBC&#x27;s news
&lt;a href=&quot;http://www.bbc.co.uk/news&quot;&gt;frontpage&lt;/a&gt;, we embed the hex file
within our HTML (it&#x27;s in a hidden div) and do all the processing locally in the
user&#x27;s browser. It means the Python editor will work offline. We also have a
non-TouchDevelop version to run from your local filesystem (so you
don&#x27;t need to be connected to the internet at all!).&lt;/p&gt;

&lt;p&gt;Most importantly, it&#x27;s possible to use the Python
&lt;a href=&quot;https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop&quot;&gt;REPL&lt;/a&gt;
via the USB connection. It means it&#x27;s possible to &quot;live code&quot; the device by
typing commands into a prompt, just like I used to do on my
old BBC Micro. It&#x27;s a wonderful mechanism for playful exploration and
experimentation so kids and teachers get to see the results of their code
running immediately on the device. Such a tight feedback loop is very
useful and lots of fun!&lt;/p&gt;

&lt;p&gt;More recently, we&#x27;ve implemented a &lt;code&gt;microbit&lt;/code&gt; module to
access the device&#x27;s hardware (a couple of buttons, an LED matrix, compass,
IO pins, accelerometer and so on). We also held a code sprint at
PyCon UK a few weeks ago and, after various bits of NDA related fun, we&#x27;ve been
able to add some wonderful new collaborators. We&#x27;re pushing ahead on interesting
new capabilities such as game-related functionality, optimizations
so it&#x27;s easy to create animations on the LED display and a music API: connect
a speaker via crocodile clips to the IO pins and listen to bleeps and
bloops.&lt;/p&gt;

&lt;p&gt;The video below, created for a friend who blogs about &quot;favourite
modules&quot;, is a few weeks old but gives a flavour of our current status:&lt;/p&gt;

&lt;div class=&quot;video-container&quot;&gt;
&lt;iframe width=&quot;480&quot; height=&quot;360&quot; src=&quot;https://www.youtube-nocookie.com/embed/HAx9sJB1_eY?rel=0&amp;amp;controls=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;We also sent a micro:bit to
&lt;a href=&quot;https://en.wikipedia.org/wiki/Guido_van_Rossum&quot;&gt;Guido&lt;/a&gt; who appears
to be quite chipper about the project:&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;I&amp;#39;ve been playing with micropython on the BBC micro:bit and it&amp;#39;s amazing! &amp;lt;3&lt;/p&gt;&amp;mdash; Guido van Rossum (@gvanrossum) &lt;a href=&quot;https://twitter.com/gvanrossum/status/653975453691080704&quot;&gt;October 13, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;But there is still lots to do and we are a small team! The BBC
understand the danger of a low
&lt;a href=&quot;https://en.wikipedia.org/wiki/Bus_factor&quot;&gt;bus factor&lt;/a&gt; (especially
when work is being done by a small ad hoc band of community volunteers) and how
important it is to engage with existing communities who are sympathetic with
the cause of computing education.&lt;/p&gt;

&lt;p&gt;As a result I&#x27;m immensely pleased that from today the BBC have agreed that we
can continue our work in the open and outside the restrictions of the NDA. The
micro:bit related parts of MicroPython have been released under the MIT
license and can be found at
&lt;a href=&quot;https://github.com/bbcmicrobit/micropython&quot;&gt;this GitHub
repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The browser based code editor will follow soon.&lt;/p&gt;

&lt;p&gt;Please take a look, poke around and help. If you feel you can contribute I
will &lt;em&gt;try&lt;/em&gt; (&lt;strong&gt;no promises&lt;/strong&gt;) to get you a device for
development purposes - but I will need to be confident that you&#x27;ll do work and
push code.&lt;/p&gt;

&lt;p&gt;You can contribute in other ways too: documentation needs writing and we
want to generate educational resources for the device. Get in touch if this
interests you! Alternatively, if you have an idea for a fun Python related
project, tell us about it and I&#x27;ll try (again, no promises) to get you a
device for testing purposes.&lt;/p&gt;

&lt;p&gt;Contributions are welcome without prejudice from anyone irrespective of age,
gender, religion, race or sexuality. Good quality code, ideas and engagement
with respect, humour and intelligence win every time.&lt;/p&gt;

&lt;p&gt;Could &lt;strong&gt;you&lt;/strong&gt; contribute something to a project that will
touch the lives of 1 million children and create a legacy &lt;em&gt;anyone&lt;/em&gt;
can use?&lt;/p&gt;

&lt;p&gt;:-)&lt;/p&gt;
</description>
        <pubDate>Tue, 20 Oct 2015 08:00:00 GMT</pubDate>
    </item>
    
    <item>
        <title>Program a Pacifist Tyranny</title>
        <link>http://ntoll.org/article/program-pacifist-tyranny</link>
        <guid>http://ntoll.org/article/program-pacifist-tyranny</guid>
        <description>&lt;h1&gt;&lt;a href=&quot;http://ntoll.org/article/program-pacifist-tyranny&quot;&gt;Program a Pacifist Tyranny&lt;/a&gt;&lt;/h1&gt;&lt;p class=&quot;published_on&quot;&gt;Tuesday 5th May 2015 (19:00PM)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Edit #1 (6th May 2015):&lt;/strong&gt; Upon re-reading this article with
fresh eyes I realise it&#x27;s very &quot;raw&quot;. This is merely a reflection of the
underdeveloped nature of the ideas expressed herein. Put simply, I&#x27;m interested
in &lt;em&gt;how programming relates to the exercise of power&lt;/em&gt;. Keep that in
mind as you read on. Finally, I welcome feedback, constructive critique and
ideas - it helps these ideas to develop. I will ignore vacuous comments
that state some variation of &quot;you&#x27;re wrong because I&#x27;m right and I know what
I&#x27;m talking about&quot;. Thoughtful, respectful yet robust argument is always
most welcome! :-)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Edit #2 (9th May 2015):&lt;/strong&gt; I&#x27;ve made minor changes to
simplify and clarify several points. I&#x27;ve also improved the flow by correcting
clunky prose.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;Violence is a forced curtailment of one&#x27;s well-being and autonomy, usually
via unwanted physical intervention by a third party.&lt;/p&gt;

&lt;p&gt;To be blunt, the threat and eventual use of violence is how government
imposes itself on citizens. In places like the UK, the Government derives its
authority to use such onerous power from its legitimacy as a democratic
institution: the citizens get a say in who is in charge. Laws created by the
legislative and judicial elements of government define the scope of the threat
and use of state-sanctioned violence towards citizens.&lt;/p&gt;

&lt;p&gt;Usually violence is not required - the threat suffices. Most people
pay fines associated with a traffic ticket: they understand failure to do so
would end badly for them (arrest followed by prison). Obeying the law is so
ingrained and unquestioningly assumed that it is a habitually formed behaviour
- violence is not even appreciated as part of the context.&lt;/p&gt;

&lt;p&gt;Any reasonably intelligent person understands why we have laws:
they help people live together peacefully and, one would hope, in a way that
is consistently equitable and fair. The figure of Lady Justice atop the
&lt;a href=&quot;https://en.wikipedia.org/wiki/Old_Bailey&quot;&gt;Old Bailey&lt;/a&gt; is the
personification of law as an impartial, objective process without fear nor
favour. Put simply, the law and the veiled threat of violence applies equally
to all.&lt;/p&gt;

&lt;p&gt;Except that it obviously doesn&#x27;t and
&lt;a href=&quot;http://www.phrases.org.uk/meanings/the-law-is-an-ass.html&quot;&gt;the law is
an ass&lt;/a&gt; on so many occasions.&lt;/p&gt;

&lt;p&gt;There are any number of examples I could use to illustrate bad laws
misapplied in an unequal, prejudicial and discriminatory way. So common is this
unfortunate turn of events that I imagine you could think of your own examples.
As a result, I&#x27;m merely going to bring to your attention the case of
&lt;a href=&quot;https://en.wikipedia.org/wiki/Aaron_Swartz&quot;&gt;Aaron Swartz&lt;/a&gt;, a gifted
coder and activist who was hounded by legal authorities in the US until he
committed suicide. I strongly recommend you watch the rather excellent
&lt;a href=&quot;http://www.takepart.com/internets-own-boy&quot;&gt;The Internet&#x27;s Own Boy&lt;/a&gt;
(embedded below), a &lt;a href=&quot;https://creativecommons.org/&quot;&gt;creative commons&lt;/a&gt;
licensed film about these tragic events:&lt;/p&gt;

&lt;div class=&quot;video-container&quot;&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/vXr-2hwTk58?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;What do such cases tell us? While the spirit of the law is &quot;blind&quot; and
impartial, the practice and application of the law isn&#x27;t.&lt;/p&gt;

&lt;p&gt;The authorities understand this and realise that technology can help both
in terms of law enforcement and impartiality. For example, in the UK speed
limits on roads are often measured by average-speed-check cameras.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/images/average_speed.jpeg&quot;
    alt=&quot;Average speed check sign&quot;/&gt;&lt;/p&gt;

&lt;p&gt;At certain points along a road (and at known distances apart) cameras are
positioned to read car registration number plates. If you average a speed
greater than the advertised limit then you are automatically sent a speeding
ticket.&lt;/p&gt;

&lt;p&gt;At no point in &lt;a href=&quot;http://www.speedcamerasuk.com/specs.htm&quot;&gt;this
process&lt;/a&gt; is a human actually involved. The cameras
never tire, they work without prejudice and they apply their machinations to
everyone. Such co-opting of automated computing technology for law
enforcement appears to be on the rise.&lt;/p&gt;

&lt;p&gt;What could possibly go wrong?&lt;/p&gt;

&lt;p&gt;Since the &lt;a href=&quot;https://en.wikipedia.org/wiki/Global_surveillance_disclosures_%282013%E2%80%93present%29&quot;&gt;Snowden revelations&lt;/a&gt;
we know that everything we do online is open
to the government. If you&#x27;re technically savvy enough to correctly use
encryption, such innocent countermeasures become an automatic marker
for the authorities to investigate further. More worryingly, lethal force is
becoming automated through the use of
&lt;a href=&quot;http://www.huffingtonpost.com/drew-f-cohen/autonomous-drones-and-the_b_4428112.html&quot;&gt;autonomous drones&lt;/a&gt;
and other similar technologies.&lt;/p&gt;

&lt;p&gt;This raises an important question:&lt;/p&gt;

&lt;p&gt;Who defines the machinations of such autonomous computing enforcement
devices?&lt;/p&gt;

&lt;p&gt;In a sense, programmers do. The code they design and write encapsulates the
behaviour of the speed camera or autonomous drone. Furthermore, with the
increased connectivity and programmability of &quot;stuff&quot; (the so called
&lt;a href=&quot;https://en.wikipedia.org/wiki/Internet_of_Things&quot;&gt;Internet of
Things&lt;/a&gt;) our tools, belongings and infrastructure are increasingly dependent
on code. Our world (more accurately, the things we create in it that make it
comfortable, pleasant and interesting) is becoming programmable. Ergo,
governments have a new mechanism for imposing upon citizens: software.&lt;/p&gt;

&lt;p&gt;The sanction to force compliance is no longer violence - the government
can pass laws to program the world to automatically coerce you,
nudge you or persuade you. For instance, imagine a situation where the
car of a flagged suspect is automatically and remotely deactivated until
certain conditions are met (not dissimilar to the Police intervention in
&lt;a href=&quot;http://www.schnews.org.uk/archive/news6252.htm&quot;&gt;this case&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Governments can legislate to program a pacifist tyranny.&lt;/p&gt;

&lt;p&gt;Why pacifist? Because the traditional threat of violence is replaced by a
threat of non-action or (worse) counter-action on the part of your
belongings.&lt;/p&gt;

&lt;p&gt;Why tyranny? Because citizens
&lt;a href=&quot;http://www.wired.com/2015/04/dmca-ownership-john-deere/&quot;&gt;no longer
control or own their belongings&lt;/a&gt;. They can&#x27;t argue with code if it refuses
to start their car, nor can they change such code so it more closely fits their
requirements.&lt;/p&gt;

&lt;p&gt;Unfortunately, most people don&#x27;t understand code in much the same way
that medieval serfs couldn&#x27;t read the Bible (so couldn&#x27;t question the authority
of the church). It&#x27;s not that programming is hard, it is simply not a widely
practised skill.&lt;/p&gt;

&lt;p&gt;This is why programming is such an essential skill to promote
in education. In order to lead a flourishing self directed life in such a
digitally dominated world we must have control over our digital devices both
in a physical and programmable sense. The alternative is to allow others,
through the code they write, intimate control over our world.&lt;/p&gt;

&lt;p&gt;By the way, it&#x27;s not just governments that exercise this power: any
service that helps you organise your life can do the same. Facebook, Google
and the rest are already trying to modify your behaviour (except they&#x27;re
trying to get you to spend money rather than obey the law).&lt;/p&gt;

&lt;p&gt;How can such a morally suspect state of affairs be foiled?&lt;/p&gt;

&lt;p&gt;Our digital world is dominated by centralised entities that hold power and
control over our data and devices. Only by decentralising (to avoid points of
control and coercion) and engaging humanity to learn about and take control of
the computational world will a tyranny of software be averted.&lt;/p&gt;

&lt;p&gt;As &lt;a href=&quot;https://www.schneier.com/&quot;&gt;Bruce Schneier&lt;/a&gt;
&lt;a href=&quot;http://www.bbc.com/future/story/20141103-everybody-spies-or-nobody-does&quot;&gt;points out&lt;/a&gt;,
software itself does not
distinguish morality from legality - it&#x27;s merely &quot;capability&quot;. Yet capability
permits certain forms of behaviour that in turn pose moral, legal and political
questions, requirements and possibilities. Furthermore, we&#x27;re engineering a
digital world from a certain point of view that is reflected in the
capabilities of the code we create. It is for this reason that writing
software is both an ethical and political activity.&lt;/p&gt;

&lt;p&gt;If you&#x27;re a coder, ask yourself about your own project&#x27;s capabilities. Work
out how it influences, empowers or diminishes your users. If at all possible,
promote users&#x27; &lt;a href=&quot;/article/autonomy&quot;&gt;personal autonomy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Technology should help humanity flourish (rather than constrain).&lt;/p&gt;

</description>
        <pubDate>Tue, 05 May 2015 19:00:00 GMT</pubDate>
    </item>
    
</channel>
</rss>